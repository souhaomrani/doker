pipeline {
    agent any

    environment {
        GRAFANA_IMAGE = 'grafana/grafana:latest'
        GRAFANA_CONTAINER_NAME = 'grafana-container'
        GRAFANA_PORT = 3000
    }

    stages {
        stage('Pull Grafana Image') {
            steps {
                script {
                    docker.image(env.GRAFANA_IMAGE).pull()
                }
            }
        }

        stage('Build and Run Grafana Container') {
            steps {
                script {
                    // Supprimer le conteneur s'il existe déjà
                    def existingContainer = docker.container(env.GRAFANA_CONTAINER_NAME)
                    if (existingContainer) {
                        existingContainer.stop()
                        existingContainer.remove(force: true)
                    }

                    // Créer et exécuter le conteneur Grafana
                    def grafanaContainer = docker.run("-p ${env.GRAFANA_PORT}:${env.GRAFANA_PORT} --name ${env.GRAFANA_CONTAINER_NAME} -d ${env.GRAFANA_IMAGE}")
                }
            }
        }
    }

    post {
        always {
            script {
                // Arrêter et supprimer le conteneur Grafana à la fin
                def runningContainer = docker.container(env.GRAFANA_CONTAINER_NAME)
                if (runningContainer) {
                    runningContainer.stop()
                    runningContainer.remove(force: true)
                }
            }
        }
    }
}
